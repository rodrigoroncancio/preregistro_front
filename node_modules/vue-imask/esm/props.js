var props = {
  // common
  mask: undefined,
  prepare: Function,
  prepareChar: Function,
  validate: Function,
  commit: Function,
  overwrite: {
    type: Boolean,
    required: false,
    default: undefined
  },
  eager: {
    required: false,
    default: undefined,
    validator: value => ['append', 'remove'].includes(value) || typeof value === 'boolean'
  },
  skipInvalid: {
    type: Boolean,
    required: false,
    default: undefined
  },
  // pattern
  placeholderChar: String,
  displayChar: String,
  lazy: {
    type: Boolean,
    required: false,
    default: undefined
  },
  definitions: Object,
  blocks: Object,
  // enum
  enum: Array,
  // range
  maxLength: Number,
  from: Number,
  to: Number,
  // date
  pattern: String,
  format: Function,
  parse: Function,
  autofix: {
    required: false,
    default: undefined,
    validator: value => value === 'pad' || typeof value === 'boolean'
  },
  // number
  radix: String,
  thousandsSeparator: String,
  mapToRadix: Array,
  scale: Number,
  normalizeZeros: {
    type: Boolean,
    required: false,
    default: undefined
  },
  padFractionalZeros: {
    type: Boolean,
    required: false,
    default: undefined
  },
  min: [Number, Date],
  max: [Number, Date],
  // dynamic
  dispatch: Function
};

export { props as default };

import IMask from 'imask/esm/imask';
import { isVue3 } from 'vue-demi';

var directive = {
  name: 'imask',
  [isVue3 ? 'beforeMount' : 'bind']: (el, _ref) => {
    let {
      value: options
    } = _ref;
    if (!options) return;
    initMask(el, options);
  },
  [isVue3 ? 'updated' : 'update']: (el, _ref2) => {
    let {
      value: options
    } = _ref2;
    if (options) {
      if (el.maskRef) {
        el.maskRef.updateOptions(options);
        if (el.value !== el.maskRef.value) el.maskRef._onChange();
      } else initMask(el, options);
    } else {
      destroyMask(el);
    }
  },
  [isVue3 ? 'unmounted' : 'unbind']: el => {
    destroyMask(el);
  }
};
function fireEvent(el, eventName, data) {
  const e = document.createEvent('CustomEvent');
  e.initCustomEvent(eventName, true, true, data);
  el.dispatchEvent(e);
}
function initMask(el, opts) {
  el.maskRef = IMask(el, opts).on('accept', () => fireEvent(el, 'accept', el.maskRef)).on('complete', () => fireEvent(el, 'complete', el.maskRef));
}
function destroyMask(el) {
  if (el.maskRef) {
    el.maskRef.destroy();
    delete el.maskRef;
  }
}

export { directive as default };

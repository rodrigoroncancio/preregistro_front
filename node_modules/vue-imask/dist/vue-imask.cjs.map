{"version":3,"file":"vue-imask.cjs","sources":["../src/props.ts","../src/composable.ts","../src/utils.ts","../src/component3-composition.ts","../src/component2.ts","../src/component.ts","../src/directive.ts"],"sourcesContent":["import { type PropType } from 'vue-demi';\nimport { type FactoryOpts, type MaskedDynamicOptions } from 'imask';\n\nexport default {\n  // common\n  mask: undefined as unknown as PropType<FactoryOpts['mask']>,\n  prepare: Function as PropType<FactoryOpts['prepare']>,\n  prepareChar: Function as PropType<FactoryOpts['prepareChar']>,\n  validate: Function as PropType<FactoryOpts['validate']>,\n  commit: Function as PropType<FactoryOpts['commit']>,\n  overwrite: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  eager: {\n    required: false,\n    default: undefined,\n    validator: (value: unknown) => ['append', 'remove'].includes(value as string) || typeof value === 'boolean',\n  },\n  skipInvalid: { type: Boolean, required: false, default: undefined },\n\n  // pattern\n  placeholderChar: String,\n  displayChar: String,\n  lazy: { type: Boolean, required: false, default: undefined },\n  definitions: Object,\n  blocks: Object,\n\n  // enum\n  enum: Array,\n\n  // range\n  maxLength: Number,\n  from: Number,\n  to: Number,\n\n  // date\n  pattern: String,\n  format: Function as PropType<FactoryOpts['format']>,\n  parse: Function as PropType<FactoryOpts['parse']>,\n  autofix: {\n    required: false,\n    default: undefined,\n    validator: (value: unknown) => value === 'pad' || typeof value === 'boolean',\n  },\n\n  // number\n  radix: String,\n  thousandsSeparator: String,\n  mapToRadix: Array,\n  scale: Number,\n  normalizeZeros: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  padFractionalZeros: {\n    type: Boolean,\n    required: false,\n    default: undefined,\n  },\n  min: [Number, Date],\n  max: [Number, Date],\n\n  // dynamic\n  dispatch: Function as PropType<MaskedDynamicOptions['dispatch']>\n};\n","import { ref, readonly, isRef, watch, onMounted, onUnmounted, type DeepReadonly, type Ref } from 'vue-demi';\nimport IMask, { type FactoryOpts, type InputMaskElement, type InputMask } from 'imask';\n\nexport\ntype ComposableEmitEventBase = 'accept' | 'complete';\n\nexport\ntype ComposableEmitEvent = ComposableEmitEventBase | `${ComposableEmitEventBase}:masked` | `${ComposableEmitEventBase}:typed` | `${ComposableEmitEventBase}:unmasked`;\n\nexport\ntype ComposableEmitValue<E extends ComposableEmitEvent, Opts extends FactoryOpts> =\n  E extends ComposableEmitEventBase | `${ComposableEmitEventBase}:masked` ? InputMask<Opts>['value'] :\n  E extends `${ComposableEmitEventBase}:unmasked` ? InputMask<Opts>['unmaskedValue'] :\n  E extends `${ComposableEmitEventBase}:typed` ? InputMask<Opts>['typedValue'] :\n  never\n;\n\nexport\ntype ComposableParams<Opts extends FactoryOpts> = {\n  emit?: <E extends ComposableEmitEvent>(eventName: E, value: ComposableEmitValue<E, Opts>, e?: InputEvent) => void,\n  onAccept?: (e?: InputEvent) => void,\n  onComplete?: (e?: InputEvent) => void,\n  defaultValue?: InputMask<Opts>['value'],\n  defaultUnmaskedValue?: InputMask<Opts>['unmaskedValue'],\n  defaultTypedValue?: InputMask<Opts>['typedValue'],\n}\n\nexport default\nfunction useIMask<\n  MaskElement extends InputMaskElement,\n  Opts extends FactoryOpts\n> (props: Opts | Ref<Opts>, {\n    emit, onAccept, onComplete, defaultValue, defaultUnmaskedValue, defaultTypedValue,\n  }: ComposableParams<Opts>={}): {\n  el: Ref<MaskElement | undefined>,\n  mask: DeepReadonly<Ref<InputMask<Opts> | undefined>>,\n  masked: Ref<InputMask<Opts>['value']>,\n  unmasked: Ref<InputMask<Opts>['unmaskedValue']>,\n  typed: Ref<InputMask<Opts>['typedValue']>,\n} {\n  const _props = (isRef(props) ? props : ref(props)) as Ref<Opts>;\n  const el: Ref<MaskElement | undefined> = ref();\n  const mask: Ref<InputMask<Opts> | undefined> = ref();\n  const masked: Ref<InputMask<Opts>['value']> = ref('');\n  const unmasked: Ref<InputMask<Opts>['unmaskedValue']> = ref('');\n  const typed: Ref<InputMask<Opts>['typedValue']> = ref();\n  let $el: MaskElement | undefined;\n  let $lastAcceptedValue: InputMask<Opts>['value'] | undefined = masked.value;\n  let $lastAcceptedUnmaskedValue: InputMask<Opts>['unmaskedValue'] | undefined = unmasked.value;\n  let $lastAcceptedTypedValue: InputMask<Opts>['typedValue'] | undefined = typed.value;\n\n  function storeLastAcceptedValues () {\n    $lastAcceptedTypedValue = typed.value = (mask.value as InputMask<Opts>).typedValue;\n    $lastAcceptedUnmaskedValue = unmasked.value = (mask.value as InputMask<Opts>).unmaskedValue;\n    $lastAcceptedValue = masked.value = (mask.value as InputMask<Opts>).value;\n  }\n\n  function _onAccept (event?: InputEvent) {\n    storeLastAcceptedValues();\n\n    if (emit) {\n      emit('accept', masked.value, event);\n      emit('accept:masked', masked.value, event);\n      emit('accept:typed', typed.value, event);\n      emit('accept:unmasked', unmasked.value, event);\n    }\n    onAccept?.(event);\n  }\n\n  function _onComplete (event?: InputEvent) {\n    if (emit) {\n      emit('complete', (mask.value as InputMask<Opts>).value, event);\n      emit('complete:masked', (mask.value as InputMask<Opts>).value, event);\n      emit('complete:typed', (mask.value as InputMask<Opts>).typedValue, event);\n      emit('complete:unmasked', (mask.value as InputMask<Opts>).unmaskedValue, event);\n    }\n    onComplete?.(event);\n  }\n\n  const updateUnmaskedValue = () => {\n    if (!mask.value || unmasked.value === undefined) return;\n\n    if ($lastAcceptedUnmaskedValue !== unmasked.value) {\n      mask.value.unmaskedValue = unmasked.value;\n      if (mask.value.unmaskedValue !== unmasked.value) _onAccept();\n    }\n    $lastAcceptedUnmaskedValue = undefined;\n  };\n  watch(unmasked, updateUnmaskedValue);\n\n  const updateMaskedValue = () => {\n    if (!mask.value || masked.value === undefined) return;\n\n    if ($lastAcceptedValue !== masked.value) {\n      mask.value.value = masked.value;\n      if (mask.value.value !== masked.value) _onAccept();\n    }\n    $lastAcceptedValue = undefined;\n  };\n  watch(masked, updateMaskedValue);\n\n  const updateTypedValue = () => {\n    if (!mask.value || typed.value === undefined) return;\n\n    if ($lastAcceptedTypedValue !== typed.value) {\n      mask.value.typedValue = typed.value;\n      if (!mask.value.masked.typedValueEquals(typed.value)) _onAccept();\n    }\n    $lastAcceptedTypedValue = undefined;\n  }\n  watch(typed, updateTypedValue);\n\n\n  function _initMask () {\n    $el = el.value;\n    const $props = _props.value;\n\n    if (!$el || !$props?.mask) return;\n\n    mask.value = IMask($el, $props);\n\n    if (defaultValue !== undefined) masked.value = defaultValue;\n    if (defaultUnmaskedValue !== undefined) unmasked.value = defaultUnmaskedValue;\n    if (defaultTypedValue !== undefined) typed.value = defaultTypedValue;\n\n    updateUnmaskedValue();\n    updateMaskedValue();\n    updateTypedValue();\n\n    storeLastAcceptedValues();\n\n    mask.value.on('accept', _onAccept).on('complete', _onComplete);\n  }\n\n  function _destroyMask () {\n    mask.value?.destroy();\n    mask.value = undefined;\n  }\n\n  onMounted(_initMask);\n  onUnmounted(_destroyMask);\n\n  watch([el, _props], () => {\n    const $newEl = el.value;\n    const $props = _props.value;\n\n    if (!$props?.mask || $newEl !== $el) _destroyMask();\n    if ($newEl) {\n      if (!mask.value) {\n        _initMask();\n      } else {\n        mask.value.updateOptions($props as any);\n      }\n    }\n  });\n\n  return {\n    el,\n    mask: readonly(mask),\n    masked,\n    unmasked,\n    typed,\n  };\n}\n","export\nfunction extractOptionsFromProps<\n  Props extends Record<string, any>,\n  ExcludeProps extends keyof Props\n> (props: Props, exclude: Readonly<ExcludeProps[]>): Omit<Props, ExcludeProps> {\n  props = {...props};\n\n  // keep only defined props\n  (Object.keys(props) as Array<ExcludeProps>)\n    .forEach(prop => {\n      if (props[prop] === undefined || exclude.includes(prop)) delete props[prop];\n    });\n\n  return props;\n}\n","import { type FactoryOpts } from 'imask';\nimport { h, watch, toRef, defineComponent, PropType } from 'vue-demi';\nimport props from './props';\nimport useIMask, { type ComposableParams } from './composable';\nimport { extractOptionsFromProps } from './utils';\n\n\nexport\ntype MaskProps = FactoryOpts & {\n  modelValue: string,\n  value: string,\n  unmasked: string,\n  typed: any,\n}\n\n// order does matter = priority\nconst VALUE_PROPS = ['typed', 'unmasked', 'value', 'modelValue'] as const; \n\n\nexport default defineComponent<MaskProps>({\n  name: 'imask-input',\n  inheritAttrs: false,\n\n  props: {\n    // plugin\n    modelValue: String,\n    value: String,\n    unmasked: String,\n    typed: { validator: () => true } as unknown as PropType<any>,\n\n    ...props,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update:masked',\n    'update:value',\n    'update:unmasked',\n    'update:typed',\n    'accept',\n    'accept:value',\n    'accept:masked',\n    'accept:unmasked',\n    'accept:typed',\n    'complete',\n    'complete:value',\n    'complete:masked',\n    'complete:unmasked',\n    'complete:typed',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { el, mask, masked, unmasked, typed } = useIMask(extractOptionsFromProps(props as MaskProps, VALUE_PROPS) as FactoryOpts, {\n      emit,\n      onAccept: (event?: InputEvent) => {\n        // emit more events\n        const v = masked.value;\n        emit('accept:value', v, event);\n        emit('update:value', v, event);\n        emit('update:masked', v, event);\n        emit('update:modelValue', v, event);\n\n        emit('update:unmasked', unmasked.value, event);\n        emit('update:typed', typed.value, event);\n      },\n      onComplete: (event?: InputEvent) => {\n        emit('complete:value', masked.value, event);\n      },\n    } as ComposableParams<MaskProps>);\n\n    const pvalue = toRef(props, 'value');\n    const pmodelValue = toRef(props, 'modelValue');\n    const punmasked = toRef(props, 'unmasked');\n    const ptyped = toRef(props, 'typed');\n\n    masked.value = pmodelValue.value || pvalue.value || '';\n    unmasked.value = punmasked.value || '';\n    typed.value = ptyped.value;\n\n    watch(pvalue, v => masked.value = v);\n    watch(pmodelValue, v => masked.value = v);\n    watch(punmasked, v => unmasked.value = v);\n    watch(ptyped, v => typed.value = v);\n\n    return () => {\n      // TODO type?\n      const data: Record<string, any> = {\n        ...attrs,\n        value: props.value != null ? props.value :\n          props.modelValue != null ? props.modelValue :\n          mask.value ? mask.value.displayValue :\n          '',\n        ref: el,\n      };\n\n      if (!props.mask) {\n        data.onInput = (event: InputEvent) => {\n          emit('update:modelValue', (event.target as HTMLInputElement).value);\n          emit('update:value', (event.target as HTMLInputElement).value);\n        }\n      }\n\n      return h('input', data);\n    };\n  },\n});\n","import { Vue2, type VNode } from 'vue-demi';\nimport IMask, { type InputMask, type FactoryOpts } from 'imask';\nimport props from './props';\nimport { extractOptionsFromProps } from './utils';\n\n\nexport default Vue2?.extend({\n  name: 'imask-input',\n\n  data () {\n    return {} as { maskRef?: InputMask<FactoryOpts> };\n  },\n\n  render (createElement): VNode {\n    const data = {\n      domProps: {\n        value: this.maskRef ? this.maskRef.value : this.value\n      },\n      on: {...this.$listeners},\n    };\n\n    // if there is no mask use default input event\n    if (!this.$props.mask) {\n      data.on.input = (event: InputEvent) => this.$emit('input', (event.target as HTMLInputElement).value);\n    } else {\n      delete data.on.input;\n    }\n\n    return createElement('input', data);\n  },\n\n  mounted () {\n    if (!this.$props.mask) return;\n\n    this._initMask();\n  },\n\n  destroyed () {\n    this._destroyMask();\n  },\n\n  computed: {\n    maskOptions (): FactoryOpts {\n      return extractOptionsFromProps(this.$props, ['value', 'unmask']) as FactoryOpts;\n    },\n  },\n\n  watch: {\n    '$props': {\n      handler (props) {\n        const maskOptions = this.maskOptions;\n        if (maskOptions.mask) {\n          if (this.maskRef) {\n            this.maskRef.updateOptions(maskOptions);\n            if ('value' in props) this._updateValue();\n          } else {\n            this._initMask(maskOptions);\n            if (props.value !== this._maskValue()) this._onAccept();\n          }\n        } else {\n          this._destroyMask();\n          if ('value' in props) (this.$el as HTMLInputElement).value = props.value;\n        }\n      },\n      deep: true\n    }\n  },\n\n  methods: {\n    _maskValue (): any {\n      if (this.unmask === 'typed') return this.maskRef?.typedValue;\n      if (this.unmask) return this.maskRef?.unmaskedValue;\n      return this.maskRef?.value;\n    },\n\n    _updateValue (): void {\n      if (!this.maskRef) return;\n\n      const value = this.value == null && this.unmask !== 'typed' ? '' : this.value;\n      if (this.unmask === 'typed') this.maskRef.typedValue = value;\n      else if (this.unmask) this.maskRef.unmaskedValue = value as string;\n      else this.maskRef.value = value as string;\n    },\n\n    _onAccept (): void {\n      const val = this._maskValue();\n      this.$emit('input', val);\n      this.$emit('accept', val);\n    },\n\n    _onComplete (): void {\n      this.$emit('complete', this._maskValue());\n    },\n\n    _initMask (maskOptions?: FactoryOpts): void {\n      if (!maskOptions) maskOptions = this.maskOptions;\n\n      this.maskRef = IMask((this.$el as HTMLInputElement), maskOptions)\n        .on('accept', this._onAccept.bind(this))\n        .on('complete', this._onComplete.bind(this));\n      this._updateValue();\n    },\n\n    _destroyMask (): void {\n      if (this.maskRef) {\n        this.maskRef.destroy();\n        delete this.maskRef;\n      }\n    }\n  },\n\n  props: {\n    value: {},\n    unmask: {\n      validator: (value) => value === 'typed' || typeof value === 'boolean',\n    },\n    ...props,\n  },\n});\n","import { isVue3 } from 'vue-demi';\n\nimport Component3 from './component3-composition';\nimport Component2 from './component2';\n\n\nexport default isVue3 ? Component3 : Component2;\n","import IMask, { type InputElement, type InputMask, type FactoryArg, type UpdateOpts } from 'imask';\nimport { isVue3 } from 'vue-demi';\n\n\ntype DirectiveMaskElement<Opts extends FactoryArg> = InputElement & { maskRef?: InputMask<Opts> }\n\nexport default {\n  name: 'imask',\n\n  [isVue3 ? 'beforeMount' : 'bind']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>, { value: options }: { value: Opts }) => {\n    if (!options) return;\n\n    initMask(el, options);\n  },\n\n  [isVue3 ? 'updated' : 'update']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>, { value: options }: { value: Opts | UpdateOpts<Opts> }) => {\n    if (options) {\n      if (el.maskRef) {\n        el.maskRef.updateOptions(options as UpdateOpts<Opts>);\n        if (el.value !== el.maskRef.value) el.maskRef._onChange();\n      }\n      else initMask(el, options as Opts);\n    } else {\n      destroyMask(el);\n    }\n  },\n\n  [isVue3 ? 'unmounted' : 'unbind']: <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>) => {\n    destroyMask(el);\n  }\n};\n\nfunction fireEvent<Opts extends FactoryArg> (el: DirectiveMaskElement<Opts>, eventName: string, data: InputMask<Opts>) {\n  const e = document.createEvent('CustomEvent');\n  e.initCustomEvent(eventName, true, true, data);\n  el.dispatchEvent(e);\n}\n\nfunction initMask<Opts extends FactoryArg> (el: DirectiveMaskElement<Opts>, opts: Opts) {\n  el.maskRef = IMask(el, opts)\n    .on('accept', () => fireEvent(el, 'accept', el.maskRef as InputMask<Opts>))\n    .on('complete', () => fireEvent(el, 'complete', el.maskRef as InputMask<Opts>));\n}\n\nfunction destroyMask <Opts extends FactoryArg>(el: DirectiveMaskElement<Opts>) {\n  if (el.maskRef) {\n    el.maskRef.destroy();\n    delete el.maskRef;\n  }\n}\n"],"names":["mask","undefined","prepare","Function","prepareChar","validate","commit","overwrite","type","Boolean","required","default","eager","validator","value","includes","skipInvalid","placeholderChar","String","displayChar","lazy","definitions","Object","blocks","enum","Array","maxLength","Number","from","to","pattern","format","parse","autofix","radix","thousandsSeparator","mapToRadix","scale","normalizeZeros","padFractionalZeros","min","Date","max","dispatch","useIMask","props","_temp","emit","onAccept","onComplete","defaultValue","defaultUnmaskedValue","defaultTypedValue","_props","isRef","ref","el","masked","unmasked","typed","$el","$lastAcceptedValue","$lastAcceptedUnmaskedValue","$lastAcceptedTypedValue","storeLastAcceptedValues","typedValue","unmaskedValue","_onAccept","event","_onComplete","updateUnmaskedValue","watch","updateMaskedValue","updateTypedValue","typedValueEquals","_initMask","$props","IMask","on","_destroyMask","_mask$value","destroy","onMounted","onUnmounted","$newEl","updateOptions","readonly","extractOptionsFromProps","exclude","keys","forEach","prop","VALUE_PROPS","defineComponent","name","inheritAttrs","modelValue","emits","setup","_ref","attrs","v","pvalue","toRef","pmodelValue","punmasked","ptyped","data","displayValue","onInput","target","h","Vue2","extend","render","createElement","domProps","maskRef","$listeners","input","$emit","mounted","destroyed","computed","maskOptions","handler","_updateValue","_maskValue","deep","methods","_this$maskRef","_this$maskRef2","_this$maskRef3","unmask","val","bind","isVue3","Component3","Component2","options","initMask","_ref2","_onChange","destroyMask","fireEvent","eventName","e","document","createEvent","initCustomEvent","dispatchEvent","opts"],"mappings":";;;;;;;;;AAGA,YAAe;AACb;AACAA,EAAAA,IAAI,EAAEC,SAAqD;AAC3DC,EAAAA,OAAO,EAAEC,QAA4C;AACrDC,EAAAA,WAAW,EAAED,QAAgD;AAC7DE,EAAAA,QAAQ,EAAEF,QAA6C;AACvDG,EAAAA,MAAM,EAAEH,QAA2C;AACnDI,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEC,OAAO;AACbC,IAAAA,QAAQ,EAAE,KAAK;AACfC,IAAAA,OAAO,EAAEV,SAAAA;GACV;AACDW,EAAAA,KAAK,EAAE;AACLF,IAAAA,QAAQ,EAAE,KAAK;AACfC,IAAAA,OAAO,EAAEV,SAAS;AAClBY,IAAAA,SAAS,EAAGC,KAAc,IAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,KAAe,CAAC,IAAI,OAAOA,KAAK,KAAK,SAAA;GACnG;AACDE,EAAAA,WAAW,EAAE;AAAER,IAAAA,IAAI,EAAEC,OAAO;AAAEC,IAAAA,QAAQ,EAAE,KAAK;AAAEC,IAAAA,OAAO,EAAEV,SAAAA;GAAW;AAEnE;AACAgB,EAAAA,eAAe,EAAEC,MAAM;AACvBC,EAAAA,WAAW,EAAED,MAAM;AACnBE,EAAAA,IAAI,EAAE;AAAEZ,IAAAA,IAAI,EAAEC,OAAO;AAAEC,IAAAA,QAAQ,EAAE,KAAK;AAAEC,IAAAA,OAAO,EAAEV,SAAAA;GAAW;AAC5DoB,EAAAA,WAAW,EAAEC,MAAM;AACnBC,EAAAA,MAAM,EAAED,MAAM;AAEd;AACAE,EAAAA,IAAI,EAAEC,KAAK;AAEX;AACAC,EAAAA,SAAS,EAAEC,MAAM;AACjBC,EAAAA,IAAI,EAAED,MAAM;AACZE,EAAAA,EAAE,EAAEF,MAAM;AAEV;AACAG,EAAAA,OAAO,EAAEZ,MAAM;AACfa,EAAAA,MAAM,EAAE5B,QAA2C;AACnD6B,EAAAA,KAAK,EAAE7B,QAA0C;AACjD8B,EAAAA,OAAO,EAAE;AACPvB,IAAAA,QAAQ,EAAE,KAAK;AACfC,IAAAA,OAAO,EAAEV,SAAS;IAClBY,SAAS,EAAGC,KAAc,IAAKA,KAAK,KAAK,KAAK,IAAI,OAAOA,KAAK,KAAK,SAAA;GACpE;AAED;AACAoB,EAAAA,KAAK,EAAEhB,MAAM;AACbiB,EAAAA,kBAAkB,EAAEjB,MAAM;AAC1BkB,EAAAA,UAAU,EAAEX,KAAK;AACjBY,EAAAA,KAAK,EAAEV,MAAM;AACbW,EAAAA,cAAc,EAAE;AACd9B,IAAAA,IAAI,EAAEC,OAAO;AACbC,IAAAA,QAAQ,EAAE,KAAK;AACfC,IAAAA,OAAO,EAAEV,SAAAA;GACV;AACDsC,EAAAA,kBAAkB,EAAE;AAClB/B,IAAAA,IAAI,EAAEC,OAAO;AACbC,IAAAA,QAAQ,EAAE,KAAK;AACfC,IAAAA,OAAO,EAAEV,SAAAA;GACV;AACDuC,EAAAA,GAAG,EAAE,CAACb,MAAM,EAAEc,IAAI,CAAC;AACnBC,EAAAA,GAAG,EAAE,CAACf,MAAM,EAAEc,IAAI,CAAC;AAEnB;AACAE,EAAAA,QAAQ,EAAExC,QAAAA;AACZ,CAAC;;ACvCD,SAASyC,QAAQA,CAGdC,KAAuB,EAAAC,KAAA,EAQxB;EAAA,IAR0B;IACxBC,IAAI;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,YAAY;IAAEC,oBAAoB;AAAEC,IAAAA,iBAAAA;AAC1C,GAAC,GAAAN,KAAA,KAAA,KAAA,CAAA,GAAC,EAAE,GAAAA,KAAA,CAAA;AAO5B,EAAA,MAAMO,MAAM,GAAIC,aAAK,CAACT,KAAK,CAAC,GAAGA,KAAK,GAAGU,WAAG,CAACV,KAAK,CAAe,CAAA;AAC/D,EAAA,MAAMW,EAAgC,GAAGD,WAAG,EAAE,CAAA;AAC9C,EAAA,MAAMvD,IAAsC,GAAGuD,WAAG,EAAE,CAAA;AACpD,EAAA,MAAME,MAAqC,GAAGF,WAAG,CAAC,EAAE,CAAC,CAAA;AACrD,EAAA,MAAMG,QAA+C,GAAGH,WAAG,CAAC,EAAE,CAAC,CAAA;AAC/D,EAAA,MAAMI,KAAyC,GAAGJ,WAAG,EAAE,CAAA;AACvD,EAAA,IAAIK,GAA4B,CAAA;AAChC,EAAA,IAAIC,kBAAwD,GAAGJ,MAAM,CAAC3C,KAAK,CAAA;AAC3E,EAAA,IAAIgD,0BAAwE,GAAGJ,QAAQ,CAAC5C,KAAK,CAAA;AAC7F,EAAA,IAAIiD,uBAAkE,GAAGJ,KAAK,CAAC7C,KAAK,CAAA;EAEpF,SAASkD,uBAAuBA,GAAI;IAClCD,uBAAuB,GAAGJ,KAAK,CAAC7C,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBmD,UAAU,CAAA;IAClFH,0BAA0B,GAAGJ,QAAQ,CAAC5C,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBoD,aAAa,CAAA;IAC3FL,kBAAkB,GAAGJ,MAAM,CAAC3C,KAAK,GAAId,IAAI,CAACc,KAAK,CAAqBA,KAAK,CAAA;AAC3E,GAAA;EAEA,SAASqD,SAASA,CAAEC,KAAkB,EAAE;AACtCJ,IAAAA,uBAAuB,EAAE,CAAA;AAEzB,IAAA,IAAIjB,IAAI,EAAE;MACRA,IAAI,CAAC,QAAQ,EAAEU,MAAM,CAAC3C,KAAK,EAAEsD,KAAK,CAAC,CAAA;MACnCrB,IAAI,CAAC,eAAe,EAAEU,MAAM,CAAC3C,KAAK,EAAEsD,KAAK,CAAC,CAAA;MAC1CrB,IAAI,CAAC,cAAc,EAAEY,KAAK,CAAC7C,KAAK,EAAEsD,KAAK,CAAC,CAAA;MACxCrB,IAAI,CAAC,iBAAiB,EAAEW,QAAQ,CAAC5C,KAAK,EAAEsD,KAAK,CAAC,CAAA;AAChD,KAAA;AACApB,IAAAA,QAAQ,IAARA,IAAAA,IAAAA,QAAQ,CAAGoB,KAAK,CAAC,CAAA;AACnB,GAAA;EAEA,SAASC,WAAWA,CAAED,KAAkB,EAAE;AACxC,IAAA,IAAIrB,IAAI,EAAE;MACRA,IAAI,CAAC,UAAU,EAAG/C,IAAI,CAACc,KAAK,CAAqBA,KAAK,EAAEsD,KAAK,CAAC,CAAA;MAC9DrB,IAAI,CAAC,iBAAiB,EAAG/C,IAAI,CAACc,KAAK,CAAqBA,KAAK,EAAEsD,KAAK,CAAC,CAAA;MACrErB,IAAI,CAAC,gBAAgB,EAAG/C,IAAI,CAACc,KAAK,CAAqBmD,UAAU,EAAEG,KAAK,CAAC,CAAA;MACzErB,IAAI,CAAC,mBAAmB,EAAG/C,IAAI,CAACc,KAAK,CAAqBoD,aAAa,EAAEE,KAAK,CAAC,CAAA;AACjF,KAAA;AACAnB,IAAAA,UAAU,IAAVA,IAAAA,IAAAA,UAAU,CAAGmB,KAAK,CAAC,CAAA;AACrB,GAAA;EAEA,MAAME,mBAAmB,GAAGA,MAAM;IAChC,IAAI,CAACtE,IAAI,CAACc,KAAK,IAAI4C,QAAQ,CAAC5C,KAAK,KAAKb,SAAS,EAAE,OAAA;AAEjD,IAAA,IAAI6D,0BAA0B,KAAKJ,QAAQ,CAAC5C,KAAK,EAAE;AACjDd,MAAAA,IAAI,CAACc,KAAK,CAACoD,aAAa,GAAGR,QAAQ,CAAC5C,KAAK,CAAA;AACzC,MAAA,IAAId,IAAI,CAACc,KAAK,CAACoD,aAAa,KAAKR,QAAQ,CAAC5C,KAAK,EAAEqD,SAAS,EAAE,CAAA;AAC9D,KAAA;AACAL,IAAAA,0BAA0B,GAAG7D,SAAS,CAAA;GACvC,CAAA;AACDsE,EAAAA,aAAK,CAACb,QAAQ,EAAEY,mBAAmB,CAAC,CAAA;EAEpC,MAAME,iBAAiB,GAAGA,MAAM;IAC9B,IAAI,CAACxE,IAAI,CAACc,KAAK,IAAI2C,MAAM,CAAC3C,KAAK,KAAKb,SAAS,EAAE,OAAA;AAE/C,IAAA,IAAI4D,kBAAkB,KAAKJ,MAAM,CAAC3C,KAAK,EAAE;AACvCd,MAAAA,IAAI,CAACc,KAAK,CAACA,KAAK,GAAG2C,MAAM,CAAC3C,KAAK,CAAA;AAC/B,MAAA,IAAId,IAAI,CAACc,KAAK,CAACA,KAAK,KAAK2C,MAAM,CAAC3C,KAAK,EAAEqD,SAAS,EAAE,CAAA;AACpD,KAAA;AACAN,IAAAA,kBAAkB,GAAG5D,SAAS,CAAA;GAC/B,CAAA;AACDsE,EAAAA,aAAK,CAACd,MAAM,EAAEe,iBAAiB,CAAC,CAAA;EAEhC,MAAMC,gBAAgB,GAAGA,MAAM;IAC7B,IAAI,CAACzE,IAAI,CAACc,KAAK,IAAI6C,KAAK,CAAC7C,KAAK,KAAKb,SAAS,EAAE,OAAA;AAE9C,IAAA,IAAI8D,uBAAuB,KAAKJ,KAAK,CAAC7C,KAAK,EAAE;AAC3Cd,MAAAA,IAAI,CAACc,KAAK,CAACmD,UAAU,GAAGN,KAAK,CAAC7C,KAAK,CAAA;AACnC,MAAA,IAAI,CAACd,IAAI,CAACc,KAAK,CAAC2C,MAAM,CAACiB,gBAAgB,CAACf,KAAK,CAAC7C,KAAK,CAAC,EAAEqD,SAAS,EAAE,CAAA;AACnE,KAAA;AACAJ,IAAAA,uBAAuB,GAAG9D,SAAS,CAAA;GACpC,CAAA;AACDsE,EAAAA,aAAK,CAACZ,KAAK,EAAEc,gBAAgB,CAAC,CAAA;EAG9B,SAASE,SAASA,GAAI;IACpBf,GAAG,GAAGJ,EAAE,CAAC1C,KAAK,CAAA;AACd,IAAA,MAAM8D,MAAM,GAAGvB,MAAM,CAACvC,KAAK,CAAA;IAE3B,IAAI,CAAC8C,GAAG,IAAI,EAACgB,MAAM,IAANA,IAAAA,IAAAA,MAAM,CAAE5E,IAAI,CAAE,EAAA,OAAA;IAE3BA,IAAI,CAACc,KAAK,GAAG+D,sBAAK,CAACjB,GAAG,EAAEgB,MAAM,CAAC,CAAA;IAE/B,IAAI1B,YAAY,KAAKjD,SAAS,EAAEwD,MAAM,CAAC3C,KAAK,GAAGoC,YAAY,CAAA;IAC3D,IAAIC,oBAAoB,KAAKlD,SAAS,EAAEyD,QAAQ,CAAC5C,KAAK,GAAGqC,oBAAoB,CAAA;IAC7E,IAAIC,iBAAiB,KAAKnD,SAAS,EAAE0D,KAAK,CAAC7C,KAAK,GAAGsC,iBAAiB,CAAA;AAEpEkB,IAAAA,mBAAmB,EAAE,CAAA;AACrBE,IAAAA,iBAAiB,EAAE,CAAA;AACnBC,IAAAA,gBAAgB,EAAE,CAAA;AAElBT,IAAAA,uBAAuB,EAAE,CAAA;AAEzBhE,IAAAA,IAAI,CAACc,KAAK,CAACgE,EAAE,CAAC,QAAQ,EAAEX,SAAS,CAAC,CAACW,EAAE,CAAC,UAAU,EAAET,WAAW,CAAC,CAAA;AAChE,GAAA;EAEA,SAASU,YAAYA,GAAI;AAAA,IAAA,IAAAC,WAAA,CAAA;IACvB,CAAAA,WAAA,GAAAhF,IAAI,CAACc,KAAK,aAAVkE,WAAA,CAAYC,OAAO,EAAE,CAAA;IACrBjF,IAAI,CAACc,KAAK,GAAGb,SAAS,CAAA;AACxB,GAAA;EAEAiF,iBAAS,CAACP,SAAS,CAAC,CAAA;EACpBQ,mBAAW,CAACJ,YAAY,CAAC,CAAA;AAEzBR,EAAAA,aAAK,CAAC,CAACf,EAAE,EAAEH,MAAM,CAAC,EAAE,MAAM;AACxB,IAAA,MAAM+B,MAAM,GAAG5B,EAAE,CAAC1C,KAAK,CAAA;AACvB,IAAA,MAAM8D,MAAM,GAAGvB,MAAM,CAACvC,KAAK,CAAA;AAE3B,IAAA,IAAI,EAAC8D,MAAM,IAANA,IAAAA,IAAAA,MAAM,CAAE5E,IAAI,CAAIoF,IAAAA,MAAM,KAAKxB,GAAG,EAAEmB,YAAY,EAAE,CAAA;AACnD,IAAA,IAAIK,MAAM,EAAE;AACV,MAAA,IAAI,CAACpF,IAAI,CAACc,KAAK,EAAE;AACf6D,QAAAA,SAAS,EAAE,CAAA;AACb,OAAC,MAAM;AACL3E,QAAAA,IAAI,CAACc,KAAK,CAACuE,aAAa,CAACT,MAAa,CAAC,CAAA;AACzC,OAAA;AACF,KAAA;AACF,GAAC,CAAC,CAAA;EAEF,OAAO;IACLpB,EAAE;AACFxD,IAAAA,IAAI,EAAEsF,gBAAQ,CAACtF,IAAI,CAAC;IACpByD,MAAM;IACNC,QAAQ;AACRC,IAAAA,KAAAA;GACD,CAAA;AACH;;AClKA,SAAS4B,uBAAuBA,CAG7B1C,KAAY,EAAE2C,OAAiC,EAA6B;AAC7E3C,EAAAA,KAAK,GAAG;IAAC,GAAGA,KAAAA;GAAM,CAAA;;AAElB;EACCvB,MAAM,CAACmE,IAAI,CAAC5C,KAAK,CAAC,CAChB6C,OAAO,CAACC,IAAI,IAAI;AACf,IAAA,IAAI9C,KAAK,CAAC8C,IAAI,CAAC,KAAK1F,SAAS,IAAIuF,OAAO,CAACzE,QAAQ,CAAC4E,IAAI,CAAC,EAAE,OAAO9C,KAAK,CAAC8C,IAAI,CAAC,CAAA;AAC7E,GAAC,CAAC,CAAA;AAEJ,EAAA,OAAO9C,KAAK,CAAA;AACd;;ACCA;AACA,MAAM+C,WAAW,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,CAAU,CAAA;AAGzE,iBAAeC,uBAAe,CAAY;AACxCC,EAAAA,IAAI,EAAE,aAAa;AACnBC,EAAAA,YAAY,EAAE,KAAK;AAEnBlD,EAAAA,KAAK,EAAE;AACL;AACAmD,IAAAA,UAAU,EAAE9E,MAAM;AAClBJ,IAAAA,KAAK,EAAEI,MAAM;AACbwC,IAAAA,QAAQ,EAAExC,MAAM;AAChByC,IAAAA,KAAK,EAAE;MAAE9C,SAAS,EAAEA,MAAM,IAAA;KAAkC;IAE5D,GAAGgC,KAAAA;GACJ;AAEDoD,EAAAA,KAAK,EAAE,CACL,mBAAmB,EACnB,eAAe,EACf,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,QAAQ,EACR,cAAc,EACd,eAAe,EACf,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,gBAAgB,EAChB,iBAAiB,EACjB,mBAAmB,EACnB,gBAAgB,CACjB;AAEDC,EAAAA,KAAKA,CAAErD,KAAK,EAAAsD,IAAA,EAAmB;IAAA,IAAjB;MAAEC,KAAK;AAAErD,MAAAA,IAAAA;AAAK,KAAC,GAAAoD,IAAA,CAAA;IAC3B,MAAM;MAAE3C,EAAE;MAAExD,IAAI;MAAEyD,MAAM;MAAEC,QAAQ;AAAEC,MAAAA,KAAAA;KAAO,GAAGf,QAAQ,CAAC2C,uBAAuB,CAAC1C,KAAK,EAAe+C,WAAW,CAAC,EAAiB;MAC9H7C,IAAI;MACJC,QAAQ,EAAGoB,KAAkB,IAAK;AAChC;AACA,QAAA,MAAMiC,CAAC,GAAG5C,MAAM,CAAC3C,KAAK,CAAA;AACtBiC,QAAAA,IAAI,CAAC,cAAc,EAAEsD,CAAC,EAAEjC,KAAK,CAAC,CAAA;AAC9BrB,QAAAA,IAAI,CAAC,cAAc,EAAEsD,CAAC,EAAEjC,KAAK,CAAC,CAAA;AAC9BrB,QAAAA,IAAI,CAAC,eAAe,EAAEsD,CAAC,EAAEjC,KAAK,CAAC,CAAA;AAC/BrB,QAAAA,IAAI,CAAC,mBAAmB,EAAEsD,CAAC,EAAEjC,KAAK,CAAC,CAAA;QAEnCrB,IAAI,CAAC,iBAAiB,EAAEW,QAAQ,CAAC5C,KAAK,EAAEsD,KAAK,CAAC,CAAA;QAC9CrB,IAAI,CAAC,cAAc,EAAEY,KAAK,CAAC7C,KAAK,EAAEsD,KAAK,CAAC,CAAA;OACzC;MACDnB,UAAU,EAAGmB,KAAkB,IAAK;QAClCrB,IAAI,CAAC,gBAAgB,EAAEU,MAAM,CAAC3C,KAAK,EAAEsD,KAAK,CAAC,CAAA;AAC7C,OAAA;AACF,KAAgC,CAAC,CAAA;AAEjC,IAAA,MAAMkC,MAAM,GAAGC,aAAK,CAAC1D,KAAK,EAAE,OAAO,CAAC,CAAA;AACpC,IAAA,MAAM2D,WAAW,GAAGD,aAAK,CAAC1D,KAAK,EAAE,YAAY,CAAC,CAAA;AAC9C,IAAA,MAAM4D,SAAS,GAAGF,aAAK,CAAC1D,KAAK,EAAE,UAAU,CAAC,CAAA;AAC1C,IAAA,MAAM6D,MAAM,GAAGH,aAAK,CAAC1D,KAAK,EAAE,OAAO,CAAC,CAAA;IAEpCY,MAAM,CAAC3C,KAAK,GAAG0F,WAAW,CAAC1F,KAAK,IAAIwF,MAAM,CAACxF,KAAK,IAAI,EAAE,CAAA;AACtD4C,IAAAA,QAAQ,CAAC5C,KAAK,GAAG2F,SAAS,CAAC3F,KAAK,IAAI,EAAE,CAAA;AACtC6C,IAAAA,KAAK,CAAC7C,KAAK,GAAG4F,MAAM,CAAC5F,KAAK,CAAA;IAE1ByD,aAAK,CAAC+B,MAAM,EAAED,CAAC,IAAI5C,MAAM,CAAC3C,KAAK,GAAGuF,CAAC,CAAC,CAAA;IACpC9B,aAAK,CAACiC,WAAW,EAAEH,CAAC,IAAI5C,MAAM,CAAC3C,KAAK,GAAGuF,CAAC,CAAC,CAAA;IACzC9B,aAAK,CAACkC,SAAS,EAAEJ,CAAC,IAAI3C,QAAQ,CAAC5C,KAAK,GAAGuF,CAAC,CAAC,CAAA;IACzC9B,aAAK,CAACmC,MAAM,EAAEL,CAAC,IAAI1C,KAAK,CAAC7C,KAAK,GAAGuF,CAAC,CAAC,CAAA;AAEnC,IAAA,OAAO,MAAM;AACX;AACA,MAAA,MAAMM,IAAyB,GAAG;AAChC,QAAA,GAAGP,KAAK;AACRtF,QAAAA,KAAK,EAAE+B,KAAK,CAAC/B,KAAK,IAAI,IAAI,GAAG+B,KAAK,CAAC/B,KAAK,GACtC+B,KAAK,CAACmD,UAAU,IAAI,IAAI,GAAGnD,KAAK,CAACmD,UAAU,GAC3ChG,IAAI,CAACc,KAAK,GAAGd,IAAI,CAACc,KAAK,CAAC8F,YAAY,GACpC,EAAE;AACJrD,QAAAA,GAAG,EAAEC,EAAAA;OACN,CAAA;AAED,MAAA,IAAI,CAACX,KAAK,CAAC7C,IAAI,EAAE;AACf2G,QAAAA,IAAI,CAACE,OAAO,GAAIzC,KAAiB,IAAK;UACpCrB,IAAI,CAAC,mBAAmB,EAAGqB,KAAK,CAAC0C,MAAM,CAAsBhG,KAAK,CAAC,CAAA;UACnEiC,IAAI,CAAC,cAAc,EAAGqB,KAAK,CAAC0C,MAAM,CAAsBhG,KAAK,CAAC,CAAA;SAC/D,CAAA;AACH,OAAA;AAEA,MAAA,OAAOiG,SAAC,CAAC,OAAO,EAAEJ,IAAI,CAAC,CAAA;KACxB,CAAA;AACH,GAAA;AACF,CAAC,CAAC;;ACnGF,iBAAeK,YAAI,IAAA,IAAA,GAAA,KAAA,CAAA,GAAJA,YAAI,CAAEC,MAAM,CAAC;AAC1BnB,EAAAA,IAAI,EAAE,aAAa;AAEnBa,EAAAA,IAAIA,GAAI;AACN,IAAA,OAAO,EAAE,CAAA;GACV;EAEDO,MAAMA,CAAEC,aAAa,EAAS;AAC5B,IAAA,MAAMR,IAAI,GAAG;AACXS,MAAAA,QAAQ,EAAE;AACRtG,QAAAA,KAAK,EAAE,IAAI,CAACuG,OAAO,GAAG,IAAI,CAACA,OAAO,CAACvG,KAAK,GAAG,IAAI,CAACA,KAAAA;OACjD;AACDgE,MAAAA,EAAE,EAAE;AAAC,QAAA,GAAG,IAAI,CAACwC,UAAAA;AAAU,OAAA;KACxB,CAAA;;AAED;AACA,IAAA,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC5E,IAAI,EAAE;AACrB2G,MAAAA,IAAI,CAAC7B,EAAE,CAACyC,KAAK,GAAInD,KAAiB,IAAK,IAAI,CAACoD,KAAK,CAAC,OAAO,EAAGpD,KAAK,CAAC0C,MAAM,CAAsBhG,KAAK,CAAC,CAAA;AACtG,KAAC,MAAM;AACL,MAAA,OAAO6F,IAAI,CAAC7B,EAAE,CAACyC,KAAK,CAAA;AACtB,KAAA;AAEA,IAAA,OAAOJ,aAAa,CAAC,OAAO,EAAER,IAAI,CAAC,CAAA;GACpC;AAEDc,EAAAA,OAAOA,GAAI;AACT,IAAA,IAAI,CAAC,IAAI,CAAC7C,MAAM,CAAC5E,IAAI,EAAE,OAAA;IAEvB,IAAI,CAAC2E,SAAS,EAAE,CAAA;GACjB;AAED+C,EAAAA,SAASA,GAAI;IACX,IAAI,CAAC3C,YAAY,EAAE,CAAA;GACpB;AAED4C,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAWA,GAAiB;MAC1B,OAAOrC,uBAAuB,CAAC,IAAI,CAACX,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAA;AAClE,KAAA;GACD;AAEDL,EAAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE;MACRsD,OAAOA,CAAEhF,KAAK,EAAE;AACd,QAAA,MAAM+E,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;QACpC,IAAIA,WAAW,CAAC5H,IAAI,EAAE;UACpB,IAAI,IAAI,CAACqH,OAAO,EAAE;AAChB,YAAA,IAAI,CAACA,OAAO,CAAChC,aAAa,CAACuC,WAAW,CAAC,CAAA;YACvC,IAAI,OAAO,IAAI/E,KAAK,EAAE,IAAI,CAACiF,YAAY,EAAE,CAAA;AAC3C,WAAC,MAAM;AACL,YAAA,IAAI,CAACnD,SAAS,CAACiD,WAAW,CAAC,CAAA;AAC3B,YAAA,IAAI/E,KAAK,CAAC/B,KAAK,KAAK,IAAI,CAACiH,UAAU,EAAE,EAAE,IAAI,CAAC5D,SAAS,EAAE,CAAA;AACzD,WAAA;AACF,SAAC,MAAM;UACL,IAAI,CAACY,YAAY,EAAE,CAAA;AACnB,UAAA,IAAI,OAAO,IAAIlC,KAAK,EAAG,IAAI,CAACe,GAAG,CAAsB9C,KAAK,GAAG+B,KAAK,CAAC/B,KAAK,CAAA;AAC1E,SAAA;OACD;AACDkH,MAAAA,IAAI,EAAE,IAAA;AACR,KAAA;GACD;AAEDC,EAAAA,OAAO,EAAE;AACPF,IAAAA,UAAUA,GAAS;AAAA,MAAA,IAAAG,aAAA,EAAAC,cAAA,EAAAC,cAAA,CAAA;AACjB,MAAA,IAAI,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE,OAAA,CAAAH,aAAA,GAAO,IAAI,CAACb,OAAO,KAAZa,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAcjE,UAAU,CAAA;AAC5D,MAAA,IAAI,IAAI,CAACoE,MAAM,EAAE,OAAAF,CAAAA,cAAA,GAAO,IAAI,CAACd,OAAO,KAAZc,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAcjE,aAAa,CAAA;MACnD,OAAAkE,CAAAA,cAAA,GAAO,IAAI,CAACf,OAAO,KAAZe,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAActH,KAAK,CAAA;KAC3B;AAEDgH,IAAAA,YAAYA,GAAU;AACpB,MAAA,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE,OAAA;AAEnB,MAAA,MAAMvG,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,IAAI,IAAI,IAAI,CAACuH,MAAM,KAAK,OAAO,GAAG,EAAE,GAAG,IAAI,CAACvH,KAAK,CAAA;AAC7E,MAAA,IAAI,IAAI,CAACuH,MAAM,KAAK,OAAO,EAAE,IAAI,CAAChB,OAAO,CAACpD,UAAU,GAAGnD,KAAK,CAAC,KACxD,IAAI,IAAI,CAACuH,MAAM,EAAE,IAAI,CAAChB,OAAO,CAACnD,aAAa,GAAGpD,KAAe,CAAC,KAC9D,IAAI,CAACuG,OAAO,CAACvG,KAAK,GAAGA,KAAe,CAAA;KAC1C;AAEDqD,IAAAA,SAASA,GAAU;AACjB,MAAA,MAAMmE,GAAG,GAAG,IAAI,CAACP,UAAU,EAAE,CAAA;AAC7B,MAAA,IAAI,CAACP,KAAK,CAAC,OAAO,EAAEc,GAAG,CAAC,CAAA;AACxB,MAAA,IAAI,CAACd,KAAK,CAAC,QAAQ,EAAEc,GAAG,CAAC,CAAA;KAC1B;AAEDjE,IAAAA,WAAWA,GAAU;MACnB,IAAI,CAACmD,KAAK,CAAC,UAAU,EAAE,IAAI,CAACO,UAAU,EAAE,CAAC,CAAA;KAC1C;IAEDpD,SAASA,CAAEiD,WAAyB,EAAQ;AAC1C,MAAA,IAAI,CAACA,WAAW,EAAEA,WAAW,GAAG,IAAI,CAACA,WAAW,CAAA;AAEhD,MAAA,IAAI,CAACP,OAAO,GAAGxC,sBAAK,CAAE,IAAI,CAACjB,GAAG,EAAuBgE,WAAW,CAAC,CAC9D9C,EAAE,CAAC,QAAQ,EAAE,IAAI,CAACX,SAAS,CAACoE,IAAI,CAAC,IAAI,CAAC,CAAC,CACvCzD,EAAE,CAAC,UAAU,EAAE,IAAI,CAACT,WAAW,CAACkE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;MAC9C,IAAI,CAACT,YAAY,EAAE,CAAA;KACpB;AAED/C,IAAAA,YAAYA,GAAU;MACpB,IAAI,IAAI,CAACsC,OAAO,EAAE;AAChB,QAAA,IAAI,CAACA,OAAO,CAACpC,OAAO,EAAE,CAAA;QACtB,OAAO,IAAI,CAACoC,OAAO,CAAA;AACrB,OAAA;AACF,KAAA;GACD;AAEDxE,EAAAA,KAAK,EAAE;IACL/B,KAAK,EAAE,EAAE;AACTuH,IAAAA,MAAM,EAAE;MACNxH,SAAS,EAAGC,KAAK,IAAKA,KAAK,KAAK,OAAO,IAAI,OAAOA,KAAK,KAAK,SAAA;KAC7D;IACD,GAAG+B,KAAAA;AACL,GAAA;AACF,CAAC,CAAC;;AChHF,gBAAe2F,cAAM,GAAGC,UAAU,GAAGC,UAAU;;ACA/C,gBAAe;AACb5C,EAAAA,IAAI,EAAE,OAAO;EAEb,CAAC0C,cAAM,GAAG,aAAa,GAAG,MAAM,GAAG,CAA0BhF,EAA8B,EAAA2C,IAAA,KAA0C;IAAA,IAAxC;AAAErF,MAAAA,KAAK,EAAE6H,OAAAA;AAAyB,KAAC,GAAAxC,IAAA,CAAA;IAC9H,IAAI,CAACwC,OAAO,EAAE,OAAA;AAEdC,IAAAA,QAAQ,CAACpF,EAAE,EAAEmF,OAAO,CAAC,CAAA;GACtB;EAED,CAACH,cAAM,GAAG,SAAS,GAAG,QAAQ,GAAG,CAA0BhF,EAA8B,EAAAqF,KAAA,KAA6D;IAAA,IAA3D;AAAE/H,MAAAA,KAAK,EAAE6H,OAAAA;AAA4C,KAAC,GAAAE,KAAA,CAAA;AAC/I,IAAA,IAAIF,OAAO,EAAE;MACX,IAAInF,EAAE,CAAC6D,OAAO,EAAE;AACd7D,QAAAA,EAAE,CAAC6D,OAAO,CAAChC,aAAa,CAACsD,OAA2B,CAAC,CAAA;AACrD,QAAA,IAAInF,EAAE,CAAC1C,KAAK,KAAK0C,EAAE,CAAC6D,OAAO,CAACvG,KAAK,EAAE0C,EAAE,CAAC6D,OAAO,CAACyB,SAAS,EAAE,CAAA;AAC3D,OAAC,MACIF,QAAQ,CAACpF,EAAE,EAAEmF,OAAe,CAAC,CAAA;AACpC,KAAC,MAAM;MACLI,WAAW,CAACvF,EAAE,CAAC,CAAA;AACjB,KAAA;GACD;AAED,EAAA,CAACgF,cAAM,GAAG,WAAW,GAAG,QAAQ,GAA6BhF,EAA8B,IAAK;IAC9FuF,WAAW,CAACvF,EAAE,CAAC,CAAA;AACjB,GAAA;AACF,CAAC,CAAA;AAED,SAASwF,SAASA,CAA2BxF,EAA8B,EAAEyF,SAAiB,EAAEtC,IAAqB,EAAE;AACrH,EAAA,MAAMuC,CAAC,GAAGC,QAAQ,CAACC,WAAW,CAAC,aAAa,CAAC,CAAA;EAC7CF,CAAC,CAACG,eAAe,CAACJ,SAAS,EAAE,IAAI,EAAE,IAAI,EAAEtC,IAAI,CAAC,CAAA;AAC9CnD,EAAAA,EAAE,CAAC8F,aAAa,CAACJ,CAAC,CAAC,CAAA;AACrB,CAAA;AAEA,SAASN,QAAQA,CAA2BpF,EAA8B,EAAE+F,IAAU,EAAE;AACtF/F,EAAAA,EAAE,CAAC6D,OAAO,GAAGxC,sBAAK,CAACrB,EAAE,EAAE+F,IAAI,CAAC,CACzBzE,EAAE,CAAC,QAAQ,EAAE,MAAMkE,SAAS,CAACxF,EAAE,EAAE,QAAQ,EAAEA,EAAE,CAAC6D,OAA0B,CAAC,CAAC,CAC1EvC,EAAE,CAAC,UAAU,EAAE,MAAMkE,SAAS,CAACxF,EAAE,EAAE,UAAU,EAAEA,EAAE,CAAC6D,OAA0B,CAAC,CAAC,CAAA;AACnF,CAAA;AAEA,SAAS0B,WAAWA,CAA2BvF,EAA8B,EAAE;EAC7E,IAAIA,EAAE,CAAC6D,OAAO,EAAE;AACd7D,IAAAA,EAAE,CAAC6D,OAAO,CAACpC,OAAO,EAAE,CAAA;IACpB,OAAOzB,EAAE,CAAC6D,OAAO,CAAA;AACnB,GAAA;AACF;;;;;;;;;;;"}